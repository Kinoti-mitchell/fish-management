import{s}from"./main-IqdIQb9W.js";class a{static async logEvent(e){try{const t=JSON.parse(sessionStorage.getItem("currentUser")||"null");if(!t){console.warn("No authenticated user found for audit logging");return}const o={user_id:t.id,action:e.action,table_name:e.table_name,record_id:e.record_id,old_values:e.old_values?JSON.stringify(e.old_values):null,new_values:e.new_values?JSON.stringify(e.new_values):null,ip_address:e.ip_address||null,user_agent:e.user_agent||navigator.userAgent,created_at:new Date().toISOString()},n=void 0;let l=null;n||(l=(await s.from("audit_logs").insert([o])).error),l&&console.warn("Failed to log audit event:",l)}catch(t){console.warn("Failed to log audit event:",t)}}static async logCreate(e,t,o){await a.logEvent({action:"CREATE",table_name:e,record_id:t,new_values:o})}static async logUpdate(e,t,o,n){await a.logEvent({action:"UPDATE",table_name:e,record_id:t,old_values:o,new_values:n})}static async logDelete(e,t,o){await a.logEvent({action:"DELETE",table_name:e,record_id:t,old_values:o})}static async logLogin(e,t){await a.logEvent({action:"LOGIN",table_name:"profiles",record_id:e,new_values:{login_time:new Date().toISOString()},user_agent:t})}static async logLogout(e){await a.logEvent({action:"LOGOUT",table_name:"profiles",record_id:e,new_values:{logout_time:new Date().toISOString()}})}static async logCustomAction(e,t,o,n){await a.logEvent({action:e,table_name:t,record_id:o,new_values:n})}}const u={create:a.logCreate,update:a.logUpdate,delete:a.logDelete,login:a.logLogin,logout:a.logLogout,custom:a.logCustomAction};export{u as a};
